{
  "resolvedId": "C:/projects/desix/components/elements/CounterUp.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\r\n    <span class=\"count-text\" ref=\"counterRef\">\r\n        {{ count }}\r\n    </span>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            count: 0,\r\n            inViewport: false\r\n        };\r\n    },\r\n    props: {\r\n        start: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        end: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        duration: {\r\n            type: Number,\r\n            default: 1000 // In milliseconds\r\n        }\r\n    },\r\n    mounted() {\r\n        this.observer = new IntersectionObserver(this.handleIntersection, {\r\n            threshold: 0.2 // 20% of the element is visible\r\n        });\r\n        this.observer.observe(this.$refs.counterRef);\r\n    },\r\n    beforeUnmount() {\r\n        this.observer.disconnect();\r\n    },\r\n    methods: {\r\n        handleIntersection(entries) {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting && !this.inViewport) {\r\n                    this.inViewport = true;\r\n                    this.startCounter();\r\n                }\r\n            });\r\n        },\r\n        startCounter() {\r\n            let startTime;\r\n            const step = (timestamp) => {\r\n                if (!startTime) startTime = timestamp;\r\n                const progress = timestamp - startTime;\r\n                this.count = Math.floor((this.end - this.start) * (progress / this.duration) + this.start);\r\n                if (progress < this.duration && this.inViewport) {\r\n                    requestAnimationFrame(step);\r\n                }\r\n            };\r\n            requestAnimationFrame(step);\r\n        }\r\n    }\r\n};\r\n</script>\r\n",
      "start": 1721717537871,
      "end": 1721717538023,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721717538023,
      "end": 1721717538023,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1721717538023,
      "end": 1721717538023,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721717538023,
      "end": 1721717538023,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1721717538023,
      "end": 1721717538023,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1721717538023,
      "end": 1721717538023,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1721717538023,
      "end": 1721717538023,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1721717538023,
      "end": 1721717538023,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1721717538023,
      "end": 1721717538023,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1721717538023,
      "end": 1721717538023,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\r\nconst _sfc_main = {\r\n    data() {\r\n        return {\r\n            count: 0,\r\n            inViewport: false\r\n        };\r\n    },\r\n    props: {\r\n        start: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        end: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        duration: {\r\n            type: Number,\r\n            default: 1000 // In milliseconds\r\n        }\r\n    },\r\n    mounted() {\r\n        this.observer = new IntersectionObserver(this.handleIntersection, {\r\n            threshold: 0.2 // 20% of the element is visible\r\n        });\r\n        this.observer.observe(this.$refs.counterRef);\r\n    },\r\n    beforeUnmount() {\r\n        this.observer.disconnect();\r\n    },\r\n    methods: {\r\n        handleIntersection(entries) {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting && !this.inViewport) {\r\n                    this.inViewport = true;\r\n                    this.startCounter();\r\n                }\r\n            });\r\n        },\r\n        startCounter() {\r\n            let startTime;\r\n            const step = (timestamp) => {\r\n                if (!startTime) startTime = timestamp;\r\n                const progress = timestamp - startTime;\r\n                this.count = Math.floor((this.end - this.start) * (progress / this.duration) + this.start);\r\n                if (progress < this.duration && this.inViewport) {\r\n                    requestAnimationFrame(step);\r\n                }\r\n            };\r\n            requestAnimationFrame(step);\r\n        }\r\n    }\r\n};\r\n\nimport { mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\n  _push(`<span${\n    _ssrRenderAttrs(_mergeProps({\n      class: \"count-text\",\n      ref: \"counterRef\"\n    }, _attrs))\n  }>${\n    _ssrInterpolate($data.count)\n  }</span>`)\n}\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/elements/CounterUp.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])",
      "start": 1721717538023,
      "end": 1721717538025,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": "C:/projects/desix/components/elements/CounterUp.vue",
        "names": [],
        "sources": [
          "C:/projects/desix/components/elements/CounterUp.vue"
        ],
        "sourcesContent": [
          "<template>\r\n    <span class=\"count-text\" ref=\"counterRef\">\r\n        {{ count }}\r\n    </span>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            count: 0,\r\n            inViewport: false\r\n        };\r\n    },\r\n    props: {\r\n        start: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        end: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        duration: {\r\n            type: Number,\r\n            default: 1000 // In milliseconds\r\n        }\r\n    },\r\n    mounted() {\r\n        this.observer = new IntersectionObserver(this.handleIntersection, {\r\n            threshold: 0.2 // 20% of the element is visible\r\n        });\r\n        this.observer.observe(this.$refs.counterRef);\r\n    },\r\n    beforeUnmount() {\r\n        this.observer.disconnect();\r\n    },\r\n    methods: {\r\n        handleIntersection(entries) {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting && !this.inViewport) {\r\n                    this.inViewport = true;\r\n                    this.startCounter();\r\n                }\r\n            });\r\n        },\r\n        startCounter() {\r\n            let startTime;\r\n            const step = (timestamp) => {\r\n                if (!startTime) startTime = timestamp;\r\n                const progress = timestamp - startTime;\r\n                this.count = Math.floor((this.end - this.start) * (progress / this.duration) + this.start);\r\n                if (progress < this.duration && this.inViewport) {\r\n                    requestAnimationFrame(step);\r\n                }\r\n            };\r\n            requestAnimationFrame(step);\r\n        }\r\n    }\r\n};\r\n</script>\r\n"
        ],
        "mappings": "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"
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1721717538025,
      "end": 1721717538025,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721717538025,
      "end": 1721717538026,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1721717538025,
      "end": 1721717538026,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721717538026,
      "end": 1721717538026,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1721717538026,
      "end": 1721717538026,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721717538026,
      "end": 1721717538026,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1721717538026,
      "end": 1721717538026,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1721717538026,
      "end": 1721717538026,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1721717538026,
      "end": 1721717538026,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1721717538026,
      "end": 1721717538026,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1721717538026,
      "end": 1721717538026,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1721717538026,
      "end": 1721717538026,
      "order": "normal"
    }
  ]
}
